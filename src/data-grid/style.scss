@use '../share/mixin' as *;
@use '../share/theme' as *;

.luna-data-grid {
  position: relative;
  border: 1px solid;
  overflow: hidden;
  outline: none;
  @include component();
  & {
    font-size: #{$font-size-s-m}px;
  }

  table {
    width: 100%;
    height: 100%;
    border-collapse: separate;
    border-spacing: 0;
    table-layout: fixed;
  }

  th,
  td {
    padding: 1px 4px;
    border-left: 1px solid;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    &:first-child {
      border-left: none;
    }
  }

  th {
    font-weight: normal;
    border-bottom: 1px solid;
    text-align: left;
    position: relative;
    &.sortable {
      padding-right: #{$padding-s-m}px;
    }
    .icon-caret-down,
    .icon-caret-up {
      font-size: 12px;
      position: absolute;
      display: none;
      top: 6px;
      right: 2px;
    }
  }

  td {
    height: 20px;
    cursor: default;
    user-select: text;
  }

  &:focus {
    .node.selectable.selected {
      color: #fff;
    }
  }
}

.header-container,
.data-container {
  overflow: hidden;
}

.header-container {
  height: 21px;
}

.data-container {
  overflow-y: auto;
}

.filler-row {
  td {
    height: auto;
  }
}

.resizer {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 5px;
  z-index: 500;
  touch-action: none;
  cursor: col-resize;
}

.resizing {
  cursor: col-resize !important;
  .luna-data-grid * {
    cursor: col-resize !important;
  }
}

@each $theme in ('light', 'dark') {
  .theme-#{$theme} {
    @include theme-var(border-color, color-border, $theme);
    th,
    td {
      @include theme-var(border-color, color-border, $theme);
    }
    th {
      @include theme-var(background-color, color-fill-secondary, $theme);
      &.sortable {
        &:hover {
          @include theme-var(background-color, color-fill, $theme);
        }
      }
    }
    .data-container {
      .node.selected,
      .node.selectable:hover {
        background-color: if($theme == 'light', #ddd, #393939);
      }
      tr:nth-child(even) {
        background-color: if($theme == 'light', #f2f7fd, #0b2544);
      }
    }
    &:focus {
      .node.selectable.selected {
        @include theme-var(background-color, color-primary, $theme);
      }
    }
  }
}
